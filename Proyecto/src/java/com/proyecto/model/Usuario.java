package com.proyecto.model;
// Generated 09-mar-2015 16:13:19 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="srs"
    , uniqueConstraints = @UniqueConstraint(columnNames="usuario") 
)
public class Usuario  implements java.io.Serializable {


     private Integer idusuario;
     private String nombre;
     private String paterno;
     private String materno;
     private String usuario;
     private String clave;
     private int rol;
     private Date fecha;
     private Set emails = new HashSet(0);
     private Set telefonos = new HashSet(0);
     private Set historicos = new HashSet(0);
     private Set cursos = new HashSet(0);
     private Set alumnoTienePendientes = new HashSet(0);
     private Set direccions = new HashSet(0);

    public Usuario() {
    }

	
    public Usuario(String nombre, String usuario, String clave, int rol, Date fecha) {
        this.nombre = nombre;
        this.usuario = usuario;
        this.clave = clave;
        this.rol = rol;
        this.fecha = fecha;
    }
    public Usuario(String nombre, String paterno, String materno, String usuario, String clave, int rol, Date fecha, Set emails, Set telefonos, Set historicos, Set cursos, Set alumnoTienePendientes, Set direccions) {
       this.nombre = nombre;
       this.paterno = paterno;
       this.materno = materno;
       this.usuario = usuario;
       this.clave = clave;
       this.rol = rol;
       this.fecha = fecha;
       this.emails = emails;
       this.telefonos = telefonos;
       this.historicos = historicos;
       this.cursos = cursos;
       this.alumnoTienePendientes = alumnoTienePendientes;
       this.direccions = direccions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idusuario", unique=true, nullable=false)
    public Integer getIdusuario() {
        return this.idusuario;
    }
    
    public void setIdusuario(Integer idusuario) {
        this.idusuario = idusuario;
    }

    
    @Column(name="nombre", nullable=false, length=80)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="paterno", length=60)
    public String getPaterno() {
        return this.paterno;
    }
    
    public void setPaterno(String paterno) {
        this.paterno = paterno;
    }

    
    @Column(name="materno", length=60)
    public String getMaterno() {
        return this.materno;
    }
    
    public void setMaterno(String materno) {
        this.materno = materno;
    }

    
    @Column(name="usuario", unique=true, nullable=false, length=45)
    public String getUsuario() {
        return this.usuario;
    }
    
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    
    @Column(name="clave", nullable=false, length=45)
    public String getClave() {
        return this.clave;
    }
    
    public void setClave(String clave) {
        this.clave = clave;
    }

    
    @Column(name="rol", nullable=false)
    public int getRol() {
        return this.rol;
    }
    
    public void setRol(int rol) {
        this.rol = rol;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha", nullable=false, length=10)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getEmails() {
        return this.emails;
    }
    
    public void setEmails(Set emails) {
        this.emails = emails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getTelefonos() {
        return this.telefonos;
    }
    
    public void setTelefonos(Set telefonos) {
        this.telefonos = telefonos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getHistoricos() {
        return this.historicos;
    }
    
    public void setHistoricos(Set historicos) {
        this.historicos = historicos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getCursos() {
        return this.cursos;
    }
    
    public void setCursos(Set cursos) {
        this.cursos = cursos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getAlumnoTienePendientes() {
        return this.alumnoTienePendientes;
    }
    
    public void setAlumnoTienePendientes(Set alumnoTienePendientes) {
        this.alumnoTienePendientes = alumnoTienePendientes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="usuario")
    public Set getDireccions() {
        return this.direccions;
    }
    
    public void setDireccions(Set direccions) {
        this.direccions = direccions;
    }




}


